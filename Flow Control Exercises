//1. What values do the following expressions evaluate to?
/*
false || (true && false); //false
true || (1 + 2); //true
(1 + 2) || true; //3
true && (1 + 2); //3
false && (1 + 2); //false
(1 + 2) && true; //true
(32 * 4) >= 129; //false
false !== !true; //false
true === 4; //false
false === (847 === '847'); //true
false === (847 == '847'); //false
(!true || (!(100 / 5) === 20) || ((328 / 4) === 82)) || false; //true
*/

/*2.Write a function, evenOrOdd, that determines whether its argument 
is an even number. If it is, the function should log 'even' to 
the console; otherwise, it should log 'odd'. 
For now, assume that the argument is always an integer.
*/

/*
function evenOrOdd(num){
  if (num % 2 === 0) {
    console.log('even');
  } else {
    console.log('odd');
  }
}
evenOrOdd(4); // 'even'
*/

/* 3.
function evenOrOdd(num){
  if (!Number.isInteger(num)){
    console.log('Sorry, the value given is not an integer');
    return;
  }
  if (num % 2 === 0) {
    console.log('even');
  } else {
    console.log('odd');
  }
}
evenOrOdd(4); // 'even'
*/

/*84. 
function barCodeScanner(serial) {
  switch (serial) {
    case '123':
      console.log('Product1');
    case '113':
      console.log('Product2');
    case '142':
      console.log('Product3');
    default:
      console.log('Product not found!');
  }
}

barCodeScanner('113'); Product2 Product3 Product not found! 
There is no breaks, so it falls through after confirming case '113'
*/


/*5.
return foo() ? 'bar' : qux();

if (foo()) {
  return 'bar';
} else {
  return qux();
}
*/

/*6.
function isArrayEmpty(arr) {
  if (arr) {
    console.log('Not Empty');
  } else {
    console.log('Empty');
  }
}

isArrayEmpty([]); //'Not Empty'
*/

/*7.
function longStringToUp(str){
  if (str.length > 10){
    return str.toUppercase();
  } else {
    return str;
  }
}
*/

/*8.
function numRange(num){
  if (num >= 0 && num <= 50){
    console.log(`${num} is between 0 and 50`);
  } else if (num >= 51 && num <= 100) {
    console.log(`${num} is between 51 and 100`);
  }else if (num < 0) {
    console.log(`${num} is less than 0`);
  } else {
    console.log(`${num} is not in the range`);
  }
}
numRange(23);
numRange(56);
numRange(-4);
numRange(104);
*/

/*9.
console.log(false ?? null); //false
console.log(true ?? (1 + 2)); //true
console.log((1 + 2) ?? true); //3
console.log(null ?? false); //false
console.log(undefined ?? (1 + 2)); //3
console.log((1 + 2) ?? null); //3
console.log(null ?? undefined); //undefined
console.log(undefined ?? null); //null
*/

/*10.
function show(foo = undefined, bar = null) {
  console.log(`foo is ${foo ?? 3}, bar is ${bar ?? 42}`);
}

show(5, 7); //foos is 5, bar is 7
show(0, 0); // foos is 0, bar is 0
show(4); //foo is 4, bar is 42
show(); //foo is 3, bar is 42

*/

