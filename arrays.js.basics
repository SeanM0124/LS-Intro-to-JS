/* 1. In the following code, what are the final 
length values for array1, array2, array3, array4, and array5? 

let array1 = [1, 2, undefined, 4]; //length is 4

let array2 = [1]; 
array2.length = 5; //length is 5

let array3 = [];
array3[-1] = [1]; //length is 0

let array4 = [1, 2, 3, 4, 5];
array4.length = 3; //length is 3

let array5 = []; //length is 101
array5[100] = 3;

*/

/* 2. Log all of the even values from myArray to the console

let myArray = [1, 3, 6, 11, 4, 2, 4, 9, 17, 16, 0];
function evenArray(arr){
  for(let i = 0; i < myArray.length; i++ ) {
    let value = myArray[i];
    if (value% 2 === 0){
      console.log(value)
    }

  }
}

evenArray(myArray);
*/

/* 3. 


let myArray = [
  [1, 3, 6, 11],
  [4, 2, 4],
  [9, 17, 16, 0],
];
function evenArray(arr){
  for(let i = 0; i < myArray.length; i++ ) {
    for(let j = 0; j < myArray[i].length; j++){
      let value = myArray[i][j];
      if (value % 2 === 0) {
        console.log(value);
    }
  }
  }
}
evenArray(myArray);

*/

/* 4.



let myArray = [
  1, 3, 6, 11,
  4, 2, 4, 9,
  17, 16, 0,
];
function evenStrArray(arr) {
  let newArray = [];
  for(let i = 0; i < arr.length; i++){
    let value = myArray[i];
    if(value % 2 === 0){
      newArray.push('even');
    } else {
      newArray.push('odd');
    }
  }
  console.log(newArray);
}

console.log(evenStrArray(myArray));

let newArray = myArray.map(function(value){
  if(value % 2 === 0) {
    return 'even':
  } else {
    return 'odd';
  }
});


*/

/* 5.


function findIntegers(arr) {
  return arr.filter(function(element){
    return Number.isInteger(element);
  });
}

let things = [1, 'a', '1', 3, NaN, 3.1415, -4, null, false];
let integers = findIntegers(things);
console.log(integers);

*/

/* 6.
function oddLengths(strings) {
  let lengths = strings.map((letters) => letters.length);
  let oddLengths = lengths.filter((number) => number % 2 === 1);
  return oddLengths;
}
let arr = ['a', 'abcd', 'abcde', 'abc', 'ab'];
console.log(oddLengths(arr));

*/

/* 7.


function sumOfSquares(numbers){
  return numbers.reduce((accumulator, number) => {
    return accumulator + number * number; // 0 + number squared
  }, 0); //accumulator set to 0
}


let array = [3, 5, 7];
console.log(sumOfSquares(array));

*/

/* 8.


function oddLengths(strings) {
  return strings.reduce((filteredNumbersArray, letters) => {
    let length = letters.length;
    if (length % 2 === 1) {
      filteredNumbersArray.push(length);
    }
    return filteredNumbersArray;
  }, []);

}

let arr = ['a', 'abcd', 'abcde', 'abc', 'ab'];
console.log(oddLengths(arr)); // => [1, 5, 3]

*/

/* 9. Without using a for, while, or do/while loop, write some code 
that checks whether the number 3 appears inside these arrays:

//use .includes() to check for value wanted

let numbers1 = [1, 3, 5, 7, 9, 11];
let numbers2 = [];
let numbers3 = [2, 4, 6, 8];

console.log(numbers1.includes(3));
console.log(numbers2.includes(3));
console.log(numbers3.includes(3));

*/

/* 10. Write some code to 
replace the value 6 in the following array with 606:




let arr = [
  ["hello", "world"],
  ["example", "mem", null, 6, 88],
  [4, 8, 12]
];
//without having to search the array, this is simple, just reassign by the index

arr[1][3] = 606;

*/
